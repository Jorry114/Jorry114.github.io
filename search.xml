<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>I am falling, I am fading~</title>
    <url>/2023/08/02/I-am-falling-I-am-fading/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/Duvet-B%C3%B4a.320.mp3' data-name='Duvet' data-artist='BǒA' data-cover='http://rylgutqq8.sabkt.gdipper.com/e166f56f581a2505e280cbefc1bea53862258e70.png%401000w_1000h_1c.webp' data-lrc='http://rylgutqq8.sabkt.gdipper.com/Duvet%20-%20B%C3%B4a.lrc' data-lrcType='3' ></div>
<p>有一种不凡的美。</p>
]]></content>
      <tags>
        <tag>歌曲推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>MyDock--一个不买mac的理由</title>
    <url>/2023/08/12/MyDock-%E4%B8%80%E4%B8%AA%E4%B8%8D%E4%B9%B0mac%E7%9A%84%E7%90%86%E7%94%B1/</url>
    <content><![CDATA[<h3 id="具体效果"><a href="#具体效果" class="headerlink" title="具体效果"></a>具体效果</h3><div class="dplayer-box" data-url='http://ryldbqco1.hn-bkt.clouddn.com/2023.08.12-14.08.mp4' ></div>

<h1 id="MyDock"><a href="#MyDock" class="headerlink" title="MyDock"></a>MyDock</h1><p>一款可以让你在windows上实现类似于mac状态栏和dock栏效果的软件，轻量好用。</p>
<p>下载链接：<a href="https://wwzp.lanzoum.com/i22Vh15agwza">https://wwzp.lanzoum.com/i22Vh15agwza</a><br>有汉化，解压完成之后点击dock_64.exe就可以启动，右击dock栏点偏好设置可以自定义软件内容，<br>dock栏上的图标直接选择你需要的软件拖动到dock栏即可，剩下的有汉化各位自行研究，我在这里不多赘述了。</p>
<h1 id="动态壁纸"><a href="#动态壁纸" class="headerlink" title="动态壁纸"></a>动态壁纸</h1><p>我因没银行卡用不了wallpaperEnginer，找了很多教程，最后我综合知乎百度其他博客园的推荐，选择了DreamScene2这款软件，唯一的不足就是你需要自行在各大网站找你想要的壁纸文件，我一般都是翻b站或者去<a href="https://zhutix.com/">致美化</a>官网找，<br>DreamScene2下载地址:<a href="https://wwzp.lanzoum.com/ivYvX15agx8j">https://wwzp.lanzoum.com/ivYvX15agx8j</a><br>密码:c01d</p>
<p>下载双击打开后选择你的动态壁纸文件就好。</p>
<h1 id="窗口管理器"><a href="#窗口管理器" class="headerlink" title="窗口管理器"></a>窗口管理器</h1><p>这个概念在linux上会比较常讲到，我因为各种原因没装上arch系统，用不了我心心念念的hyprland，万念俱灰下我找到了一个正在开发中的项目————komorebi<br>这个东西很不好用，真的不好用，体验可以，但是长期使用万万不可，推荐这个只是因为在windows上你别无选择，不用这个那就没得用了。<br>这里我啰嗦几句关于窗口管理器的概念，窗口管理器就是一个可以自动帮你归类，布局你打开窗口的软件，我不明白为什么windows出了这么多年都没人做这一类软件，相比之下linux的定制性高很多，光这一类软件都有不下20种选择，windows这个系统招人烦可能也就是因为不开源吧，不然我认为windows会比linux有更大的可能。<br>软件的github页面：<a href="https://github.com/LGUG2Z/komorebi">https://github.com/LGUG2Z/komorebi</a><br>下载安装使用大部分可能会用到命令行，如果对这个不大熟悉还是老老实实等成熟之后再用。</p>
]]></content>
      <categories>
        <category>Doc</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>一首不需要推荐的名曲</title>
    <url>/2023/08/04/%E4%B8%80%E9%A6%96%E4%B8%8D%E9%9C%80%E8%A6%81%E6%8E%A8%E8%8D%90%E7%9A%84%E5%90%8D%E6%9B%B2/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/%E5%B8%95%E8%B5%AB%E8%B4%9D%E5%B0%94%20%E5%8D%A1%E5%86%9C-%E8%B4%B5%E6%97%8F%E9%9F%B3%E4%B9%90%E5%8F%A4%E5%85%B8.flac' data-name='卡农' data-artist='无' data-cover='http://rylgutqq8.sabkt.gdipper.com/0e105fe2d8666adb5020789395a985191ffb1070.jpg%401000w_1000h_1c.webp' ></div>
]]></content>
      <tags>
        <tag>歌曲推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>从0开始配置neovim--一款神之编辑器</title>
    <url>/2023/07/20/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AEneovim-%E4%B8%80%E6%AC%BE%E7%A5%9E%E4%B9%8B%E7%BC%96%E8%BE%91%E5%99%A8/</url>
    <content><![CDATA[<p>我做这件事本就没有什么意义，活着就得这样，不能什么都追求要有个意义，给世界宇宙和你自己留点隐私是有必要的,<br>    但不是不去追求真理，<br>    世界给了你一扇窗要的是让你一点一点地窥探蓝天，而不是一眼就窥见全貌。<br>    我的图文教程就拿最没有意义的事，我整了6个月的活开始讲起。</p>
<h1 id="Neovim"><a href="#Neovim" class="headerlink" title="Neovim"></a>Neovim</h1><p>vim作为一个非常古老的文本编辑器，是neovim的亲爹，因为社区的活跃出现了各式各样的插件和种类而焕发生机。<br>可玩性很高，客制化程度相当高,因技术的迭代更新，出现了新时代的vim——neovim，<br>    一款基于vim又高于vim的新版vim。也是今天要讲解的主角</p>
<h3 id="0-下载安装"><a href="#0-下载安装" class="headerlink" title="0.下载安装"></a>0.下载安装</h3><p><a href="https://github.com/neovim/neovim">neovim官方文档</a>，<a href="https://github.com/neovim/neovim/releases">下载地址</a>,<br>同一个版本说明的下方有个Assets，拉开选择最新版的windows安装包进行下载，</p>
<h3 id="1-创建配置文件"><a href="#1-创建配置文件" class="headerlink" title="1.创建配置文件"></a>1.创建配置文件</h3><p>跟某些v字开头的浏览器编辑器不一样，vim或者neovim是没有图形化的编辑界面的，<br>    也就是说你基本每一步改动都要在代码或命令行里进行，需要一定的计算机基础和编程基础，<br>    否则理解起来会很困难,最好能够熟悉命令行和lua语言，大部分的工作用到命令行会简单很多，<br>    本文的配置皆使用lua语言。<br>    在windows下，neovim的配置文件存放在</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator\AppData\Local\nvim</span><br></pre></td></tr></table></figure>
<p>这个目录下<br>    假设没有这个文件夹你可以自行创建，<br>    顺便提一句，在linux下配置的neovim直接把配置抄到windows下是基本可行的，<br>    除了彩虹括号插件之外都没有出什么大问题。·<br>    首先你要做的就是在</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator\AppData\Local\nvim</span><br></pre></td></tr></table></figure>
<p>下创建一个<strong>init.lua</strong>文件，这里要把文件扩展名打开，后缀一定要改成lua，这是第一步，<br>    其次就是插件列表和个人的配置列表，我建议都使用一个文件夹来管理，在C:\Users\Administrator\AppData\Local\nvim下新建名为lua（叫什么都可以）的文件夹，<br>    在其中再次新建core及plugin文件夹，core用于存放配置文件，plugin用于存放插件的配置文件和下载程序。</p>
<h3 id="2-安装插件管理器"><a href="#2-安装插件管理器" class="headerlink" title="2.安装插件管理器"></a>2.安装插件管理器</h3><p>如此庞大的插件市场首先就是要解决下载使用管理这三大基本的问题，对于neovim，有很多的选择，例如<br>packer，lazy，因为我当时看的教程比较老，所以用的是不那么方便的packer<br>假设你需要使用neovim，我的建议是你去用lazy，这个插件管理系统比packer有序的多，且下载简单，有更<br>美观的图形化界面。<br>以下我以Packer为例子，讲述如何在windows下安装Packer。</p>
<h5 id="1-安装git"><a href="#1-安装git" class="headerlink" title="(1)安装git"></a>(1)安装git</h5><p>这个很简单，到<a href="https://git-scm.com/">git官网</a>下载安装即可。</p>
<h5 id="2-克隆仓库"><a href="#2-克隆仓库" class="headerlink" title="(2)克隆仓库"></a>(2)克隆仓库</h5><p>有了git以后我们可以使用git clone指令，在任意位置右键鼠标，选择git bash here，后在命令行输入这<br>一段命令    </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/wbthomason/packer.nvim &quot;$env:LOCALAPPDATA\nvim-data\site\pack\packer\start\packer.nvim&quot;</span></span><br></pre></td></tr></table></figure>
<p>这就算是装好了，最后附上<a href="https://github.com/wbthomason/packer.nvim">packer仓库地址</a>，怎么使用去<strong>看文档看文档看文档</strong>。</p>
<h3 id="或者还有一种更简单的方法，假设你无法使用git，你可以直接复制我的配置文件，即开即用。"><a href="#或者还有一种更简单的方法，假设你无法使用git，你可以直接复制我的配置文件，即开即用。" class="headerlink" title="或者还有一种更简单的方法，假设你无法使用git，你可以直接复制我的配置文件，即开即用。"></a>或者还有一种更简单的方法，假设你无法使用git，你可以直接复制我的配置文件，即开即用。</h3><p>我的配置文件地址在<a href="https://gitee.com/jorryjo/new-configruation">这里</a>,把这个文件下载下来，然后直接解压到</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator\AppData\Local\nvim</span><br></pre></td></tr></table></figure>
<p>用neovim进入该文件下的</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">\lua\plugins\plugins-setup.lua</span><br></pre></td></tr></table></figure>
<p>按下回车，等待配置安装完成即可。<br>你可能会需要neovide，这个我下一篇文章会说。</p>
<h5 id="3-必备插件"><a href="#3-必备插件" class="headerlink" title="(3).必备插件"></a>(3).必备插件</h5><p>每一个人的习惯不一样，我个人觉得颜值即正义，所以我的配置文件实用性不高，观赏性高点，<br>这里我推荐几个好看好用的插件。</p>
<h6 id="dashboard"><a href="#dashboard" class="headerlink" title="dashboard"></a>dashboard</h6><p><a href="https://github.com/nvimdev/dashboard-nvim">官方文档</a>，是国人glepnir写的，本人非常佩服他。<br>是一个开屏的插件，就是能够给你的neovim一个更好看的首页。<br>我建议搭配alpha插件使用，<a href="https://github.com/goolord/alpha-nvim">官方文档</a>,基于dashboard的主题，可以自定义开屏图标，但需是ascii码，我推荐几个常用的图片转ascii码的网站<br><a href="https://fsymbols.com/text-art/">https://fsymbols.com/text-art/</a><br><a href="https://manytools.org/hacker-tools/image-to-byte-array/">https://manytools.org/hacker-tools/image-to-byte-array/</a><br><a href="https://vj-duardo.github.io/Braille-Art/">https://vj-duardo.github.io/Braille-Art/</a><br><a href="https://lachlanarthur.github.io/Braille-ASCII-Art/">https://lachlanarthur.github.io/Braille-ASCII-Art/</a><br>都挺好的。</p>
<h6 id="Alpha"><a href="#Alpha" class="headerlink" title="Alpha"></a>Alpha</h6><p><a href="https://github.com/goolord/alpha-nvim">官方文档</a>，就是上文我所说的，有很多可以自定的地方，详细的还是得自己去看文档。</p>
<h6 id="Autoparis"><a href="#Autoparis" class="headerlink" title="Autoparis"></a>Autoparis</h6><p><a href="https://github.com/windwp/nvim-autopairs">官方文档</a>，一款能够自动补全另一半(括号)的插件，配置文件我也没有做什么改动，直接用官方的默认配置或者去抄我的配置文件。</p>
<h5 id="treesitter"><a href="#treesitter" class="headerlink" title="treesitter"></a>treesitter</h5><p><a href="https://github.com/nvim-treesitter/nvim-treesitter">官方文档</a>，更高级的代码高亮，直接默认配置，或者去抄我的配置文件。</p>
<h2 id="最后附上几张我的nvim样式截图。"><a href="#最后附上几张我的nvim样式截图。" class="headerlink" title="最后附上几张我的nvim样式截图。"></a>最后附上几张我的nvim样式截图。</h2>
    <figure class="figure-image">
      <img src="http://rylgutqq8.sabkt.gdipper.com/64b94ec41ddac507cce0ffd4.png" alt="别用聚合图床，6块钱去用七牛云，不然你就会像我现在这样在含泪补链接" loading="lazy" />
      <figcaption>别用聚合图床，6块钱去用七牛云，不然你就会像我现在这样在含泪补链接</figcaption>
    </figure>
  

    <figure class="figure-image">
      <img src="http://rylgutqq8.sabkt.gdipper.com/64b94fb51ddac507cce5986d.png" alt="后续更新换成了staline" loading="lazy" />
      <figcaption>后续更新换成了staline</figcaption>
    </figure>
  

    <figure class="figure-image">
      <img src="http://rylgutqq8.sabkt.gdipper.com/64b94fcb1ddac507cce604fd.png" alt="开屏/alpha页" loading="lazy" />
      <figcaption>开屏/alpha页</figcaption>
    </figure>
  
]]></content>
      <categories>
        <category>Doc</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>好听，爱听</title>
    <url>/2023/07/27/%E4%BB%BB%E5%8A%A1%E7%BD%A2%E4%BA%86/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/%EB%9A%9C%EB%91%90%EB%9A%9C%EB%91%90%20%28DDU-DU%20DDU-DU%29-BLACKPINK.320.mp3' data-name='DDU-DU DDU-DU' data-artist='BLACKPINK' data-cover='http://rylgutqq8.sabkt.gdipper.com/20509557656b9852a7fef52d9337263e104040d8.jpg%401000w_1000h_1c.webp' data-lrc='http://rylgutqq8.sabkt.gdipper.com/%EB%9A%9C%EB%91%90%EB%9A%9C%EB%91%90%20%28DDU-DU%20DDU-DU%29%20-%20BLACKPINK.lrc' data-lrcType='3' ></div>
<p>炜👨‍🦳点名要听。<br>确实挺不错的。</p>
]]></content>
      <tags>
        <tag>歌曲推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>动态壁纸推荐（1）</title>
    <url>/2023/08/14/%E5%8A%A8%E6%80%81%E5%A3%81%E7%BA%B8%E6%8E%A8%E8%8D%90%EF%BC%881%EF%BC%89/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/%E5%96%9C%E5%8A%87-%E6%98%9F%E9%87%8E%E6%BA%90.128.mp3' data-name='喜剧' data-artist='星野源' data-cover='http://rylgutqq8.sabkt.gdipper.com/%E6%88%8F%E5%89%A7.webp' data-lrc='http://rylgutqq8.sabkt.gdipper.com/%E5%96%9C%E5%8A%87%20-%20%E6%98%9F%E9%87%8E%E6%BA%90.lrc' data-lrcType='3' ></div>
<div class="dplayer-box" data-url='http://ryldbqco1.hn-bkt.clouddn.com/12%E6%9C%9Fbz%20%285%29.mp4' ></div>
<p>文件地址：<a href="http://ryldbqco1.hn-bkt.clouddn.com/12%E6%9C%9Fbz%20%285%29.mp4%EF%BC%8C">http://ryldbqco1.hn-bkt.clouddn.com/12%E6%9C%9Fbz%20%285%29.mp4，</a></p>
<h3 id="点进去后右键下载，下同"><a href="#点进去后右键下载，下同" class="headerlink" title="点进去后右键下载，下同"></a>点进去后右键下载，下同</h3><div class="dplayer-box" data-url='http://ryldbqco1.hn-bkt.clouddn.com/23%E3%80%81%E7%BB%AB%E6%B3%A2%E4%B8%BD%E6%BC%AB%E7%94%BB%E5%8A%A8%E6%80%81%E5%A3%81%E7%BA%B8.mp4' ></div>
<p>文件地址：<a href="http://ryldbqco1.hn-bkt.clouddn.com/23%E3%80%81%E7%BB%AB%E6%B3%A2%E4%B8%BD%E6%BC%AB%E7%94%BB%E5%8A%A8%E6%80%81%E5%A3%81%E7%BA%B8.mp4">http://ryldbqco1.hn-bkt.clouddn.com/23%E3%80%81%E7%BB%AB%E6%B3%A2%E4%B8%BD%E6%BC%AB%E7%94%BB%E5%8A%A8%E6%80%81%E5%A3%81%E7%BA%B8.mp4</a></p>
<div class="dplayer-box" data-url='http://ryldbqco1.hn-bkt.clouddn.com/7%E3%80%81%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97.mp4' ></div>
<p>文件地址：<a href="http://ryldbqco1.hn-bkt.clouddn.com/7%E3%80%81%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97.mp4">http://ryldbqco1.hn-bkt.clouddn.com/7%E3%80%81%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97.mp4</a></p>
<div class="dplayer-box" data-url='http://ryldbqco1.hn-bkt.clouddn.com/4%E3%80%81Red%20Umbrella.mp4' ></div>
<p>文件地址：<a href="http://ryldbqco1.hn-bkt.clouddn.com/4%E3%80%81Red%20Umbrella.mp4">http://ryldbqco1.hn-bkt.clouddn.com/4%E3%80%81Red%20Umbrella.mp4</a></p>
]]></content>
      <categories>
        <category>Wallpaper</category>
      </categories>
      <tags>
        <tag>动态壁纸</tag>
      </tags>
  </entry>
  <entry>
    <title>前尘硬化像石头 随缘地抛下便逃走</title>
    <url>/2023/08/03/%E5%89%8D%E5%B0%98%E7%A1%AC%E5%8C%96%E5%83%8F%E7%9F%B3%E5%A4%B4-%E9%9A%8F%E7%BC%98%E5%9C%B0%E6%8A%9B%E4%B8%8B%E5%8F%98%E9%80%83%E8%B5%B0/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/obj_wo3DlMOGwrbDjj7DisKw_14096431539_0225_8539_7485_e45cc5942b0c6ec3086746cd2163c1d2.mp3' data-name='富士山下' data-artist='陈奕迅' data-cover='http://rylgutqq8.sabkt.gdipper.com/aec972f72907fd34abdd42e287c1823766f09e9c.png%401000w_1000h_1c.webp' data-lrc='http://rylgutqq8.sabkt.gdipper.com/%E5%AF%8C%E5%A3%AB%E5%B1%B1%E4%B8%8B%20-%20%E9%99%88%E5%A5%95%E8%BF%85.lrc' data-lrcType='3' ></div>]]></content>
      <tags>
        <tag>歌曲推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>啰嗦的话</title>
    <url>/2023/07/18/%E5%95%B0%E5%97%A6%E7%9A%84%E8%AF%9D/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="输入错误密码弹出的提示信息" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="22de42da933ca5fc0955b77428b79c49c082e9850fcc50a6c10f1b53bb59248c">10d79030e8222445804370796b90fca10dec9888c61a51191f7bcefa426776cad30d448424127cde1008626bd6c1bc56ea6c4399bd7456bfc1c89943479bc1d1a2441cc938b41335a1f973c95c09b0f7cebc30cc1d5cf6d8ff97bc202b30d880be34ced0ba47ec2761d42fda7041a360139e3c488d076ca3f3d3e72bd55247786539affd4d510f9886d25ed0e2688ce4bfdd481b2f9df1bb82a21bd785823b35251fd20a751d693a2bf3ccde2caba0cfbe0532c193cd1b92440857ea8ff13050465759b3efbfca9c890d1c4d9de568c2c7408e62390f8f4e19ce344799648bcceba001c158c7dcd0a0448b71ffc0bd5d0bfe5e7ac29de243efe1807c9c15ebaabf7426e8e47fa178960d652cd3c64e12fdfceedc245da81092eae3659f0b3cbf3848ed1c23ba3d70f85571a846060954b68b1ea6524a19de992037f11a4515b4354f765a29ac1131f2a2eba7202d9307df5b4986da4c0473c4498678989d291a820dea11f763d9d73a682809ca5b910de8e23eda1ec9b2c3aec10eb9627bd1ea023d9b22019360e995d8e7424df7ec17caa50254c1fade2ba498fc8513093fffdb12bbfdb55c46344b85882ddfef90507f6a3d9a40a3bd0190ee664c8df5bf17066d1923891f1321bda1c1f2ec198db2fef260bb23b2789a6e1dcedbf07fe244b096ac6165e629ba787e5b7d8f7ea5e49488856465172d06f3918b7d807798952a5b9afab7368cd736a50b7444d3e43c7dde7df39a052ba3ef8f69d41791ac565323908853b48bcda1a56a133a8cfb4e1b7bb6f5028033faa3102a190e2c980d7a8b088251ac496d9679dca9c8a162f15c7300626d6e9a0983ce2897331198e8f02fe274e34c606fb311052e7287ee24bed04fe01443892bf3a8e9ce31f9a006caeaabd266070f23540c1a5bb7fec95912a562dcbcb3883f50895da3f61c296e6bb830278f3851f22741d32e760bf1b19604ad13dcf970055dff19e1b9c7e17f25f6dc37040f48f32707d5141f36a59f14c6e8047e0f29a9a3631b34dbf800a8fb56b96dbce9bac3165538bf5ef09345abfd27bd22b18e0aea9b6df03b93efc881cabd28949a956bd0c6130eb975b4ab144d5e845f49c755d38990caa45c4c8cd531f45c6191121e4304d8a89f8b068774089f1b76be036c758a2694bf412f31856bea3e9fd2ae3280a47d60ffe4b5af0a07b176bcad4565e2c83c6d74447353af19099bf1cc2f87d4c4a348a4fd4dd733feddeb0521e1737c4d59013c5c1a45b7014352706279e9a4375f1f132b6ef4eaa3c0cfc6c454b62d2740c63ab2f5f87547b6c44354176be52f278602dd01c1c0632560c966f685913f680b7c5ce2011bc80e20f71271dbe61cc5e942d51c3ad8fd3c1d0756a91314901ac53b2a5ea2c17146b2e0ccd79c6fba9b82f273b3c81e06b34fae6a550d78f80c1cbe57978b45929cdbaf7d7eb0db04a06ec990c01433ef1614163252f7ab084478681f492c9c32bc281ac390024103b5222ed0850d713ca835d1e1b5a30470e7139c3434d61c649bc7f470cbef0b2a4262455f5efe1fb48cf1e01777f4a6619d5fc9aae706dfe17d5073ee3cf1ca30c43bc17eb4d51e14f4719b3183ee5978439bed52b58e31c37cc203716de01f184534d4cbe4ba709df64bb12c7142c4759652bd6ee1a38bab1d8c88dd1e34559c3d9612f4b700d7a149b2253ff445f4246c4a009249933df35b2dd2018b8ae5acdca77b9477fbe014c2a76b116176d5c67459db98050eb741b8d12e7087a24593a1c183f6ad8e6678a4de6448b98258a1ab22f151bcbf9bf98ffb5a35983385f0673795f9a13db167bb8ab00ae6d0d147faaf25cedf667834dd3bfc2a5a63a425cacb8d6eb37b7e727093cd0fa79aa9461d6abbf749931c6733b0af4ba30099cfbe5e972220abecd932ace1c8f28b9295eaefd74015eadc98961197ec40396d3d2cc2eac3cf048001a72ab75156f026c4da17f7c69516b65695f3931b731dbdbf6b7134814756</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码框的提示信息</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Doc</category>
      </categories>
  </entry>
  <entry>
    <title>强风吹拂</title>
    <url>/2023/08/01/%E5%BC%BA%E9%A3%8E%E5%90%B9%E6%8B%82/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/obj_wo3DlMOGwrbDjj7DisKw_8779886276_eac0_7b5d_5eb8_c79a42c50eed09ba46b18a2326a4e4dc.mp3' data-name='リセット' data-artist='Taichi Mukai' data-cover='http://rylgutqq8.sabkt.gdipper.com/004ee07c50e08c9f418015fafe365f9637792ea7.jpg%401000w_1000h_1c.webp' data-lrc='http://rylgutqq8.sabkt.gdipper.com/%E3%83%AA%E3%82%BB%E3%83%83%E3%83%88%20-%20%E5%90%91%E4%BA%95%E5%A4%AA%E4%B8%80.lrc' data-lrcType='3' ></div>
]]></content>
      <tags>
        <tag>歌曲推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>我会发着呆，然后忘记你~</title>
    <url>/2023/07/31/%E6%88%91%E4%BC%9A%E5%8F%91%E7%9D%80%E5%91%86%EF%BC%8C%E7%84%B6%E5%90%8E%E5%BF%98%E8%AE%B0%E4%BD%A0/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/%E8%BD%A8%E8%BF%B9.mp3' data-name='轨迹' data-artist='周杰伦' data-cover='http://rylgutqq8.sabkt.gdipper.com/7aec54e736d12f2e695636fc4ac2d562843568df.webp' data-lrc='http://rylgutqq8.sabkt.gdipper.com/%E8%BD%A8%E8%BF%B9.lrc' data-lrcType='3' ></div>
]]></content>
      <tags>
        <tag>歌曲推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>放首歌听</title>
    <url>/2023/07/30/%E6%94%BE%E9%A6%96%E6%AD%8C%E5%90%AC/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/%E6%99%9A%E5%AE%89-%E9%A2%9C%E4%BA%BA%E4%B8%AD.320.mp3' data-name='晚安' data-artist='颜中人' data-cover='http://rylgutqq8.sabkt.gdipper.com/f31342a0e7cfdebb9d1404608b8da977f8a6c461.png%401000w_1000h_1c.webp' data-lrc='http://rylfvel1n.hd-bkt.clouddn.com/%E6%99%9A%E5%AE%89%20-%20%E9%A2%9C%E4%BA%BA%E4%B8%AD.lrc' data-lrcType='3' ></div>
<p>不能一昧盯着老一辈的歌,把滤镜关了,好听的歌还是有的。</p>
]]></content>
      <tags>
        <tag>歌曲推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>把故事听到最后才说再见</title>
    <url>/2023/07/24/%E6%8A%8A%E6%95%85%E4%BA%8B%E5%90%AC%E5%88%B0%E6%9C%80%E5%90%8E%E6%89%8D%E8%AF%B4%E5%86%8D%E8%A7%81/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='https://www.joy127.com/url/106256.mp3' data-name='修炼爱情' data-artist='林俊杰' data-cover='https://pic.imgdb.cn/item/64be748a1ddac507ccd84d60.webp' ></div>
<p><strong>rqの爱歌.</strong></p>
<h1 id="一些稍微有用的项目（2）"><a href="#一些稍微有用的项目（2）" class="headerlink" title="一些稍微有用的项目（2）"></a>一些稍微有用的项目（2）</h1><h3 id="1-视频转字符画"><a href="#1-视频转字符画" class="headerlink" title="1.视频转字符画"></a>1.视频转字符画</h3><p>这个半抄半写，效果一级<br>需要opencv库，os库是python自带。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;mqpka89045321@#$%^&amp;*()_=||||&#125;&#x27;</span>    <span class="comment"># 字符表</span></span><br><span class="line">video = cv2.VideoCapture(<span class="string">&#x27;1.mp4&#x27;</span>)     <span class="comment"># 读取视频</span></span><br><span class="line">ret, frame = video.read()    <span class="comment"># 读取帧</span></span><br><span class="line"><span class="keyword">while</span> ret:    <span class="comment"># 逐帧读取</span></span><br><span class="line">    str_img = <span class="string">&#x27;&#x27;</span>    <span class="comment"># 字符画</span></span><br><span class="line">    grey = cv2.cvtColor(frame, cv2.COLOR_RGB2GRAY)    <span class="comment"># 灰度转换</span></span><br><span class="line">    grey = cv2.resize(grey, (<span class="number">300</span>, <span class="number">120</span>))    <span class="comment"># 该表大小</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> grey:    <span class="comment"># 遍历每个像素点</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">            index = <span class="built_in">int</span>(j / <span class="number">256</span> * <span class="built_in">len</span>(<span class="built_in">str</span>))    <span class="comment"># 获取字符坐标</span></span><br><span class="line">            str_img += <span class="built_in">str</span>[index]    <span class="comment"># 将字符添加到字符画中</span></span><br><span class="line">        str_img += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    os.system(<span class="string">&#x27;cls&#x27;</span>)    <span class="comment"># 清除上一帧输出的内容</span></span><br><span class="line">    <span class="built_in">print</span>(str_img)    <span class="comment"># 输出字符画</span></span><br><span class="line">    ret, frame = video.read()    <span class="comment"># 读取下一帧</span></span><br><span class="line">    cv2.waitKey(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<p>就是把视频的每一帧都进当成图片进行处理，然后拼接到一起。</p>
<div class="dplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/unknown_2023.08.01-09.09.mp4' ></div>


<h3 id="2-文本转语音"><a href="#2-文本转语音" class="headerlink" title="2.文本转语音"></a>2.文本转语音</h3><p>需要pyttsx3<br>默认好像是女声</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pyttsx3</span><br><span class="line"> </span><br><span class="line">say = pyttsx3.init()        <span class="comment"># 创建pyttsx对象，并初始化对象</span></span><br><span class="line"> </span><br><span class="line">msg = <span class="string">&#x27;&#x27;&#x27;我测你们妈&#x27;&#x27;&#x27;</span>    <span class="comment"># 需要合成的文字</span></span><br><span class="line"> </span><br><span class="line">say.say(msg)        <span class="comment"># 合成并播放语音</span></span><br><span class="line">say.runAndWait()    <span class="comment"># 等待语音播放完</span></span><br></pre></td></tr></table></figure>

<h3 id="3-准确的预测你的身高（doge）"><a href="#3-准确的预测你的身高（doge）" class="headerlink" title="3.准确的预测你的身高（doge）"></a>3.准确的预测你的身高（doge）</h3><p>只要你诚实，就肯定不会出差错。</p>

    <figure class="figure-image">
      <img src="https://pic.imgdb.cn/item/64be9e941ddac507cc6244ca.png" alt="" loading="lazy" />
      <figcaption></figcaption>
    </figure>
  
<p>代码实现，这个真的没有技术含量。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入您的身高:&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;正在收入信息至云端&quot;</span>)</span><br><span class="line"><span class="built_in">input</span>(<span class="string">&quot;请按下.来继续您的操作&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;正在计算&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;经过严密计算&quot;</span>)</span><br><span class="line"><span class="built_in">input</span>(<span class="string">&quot;结果已经计算完毕，请输入.来继续操作&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;您的身高是:&quot;</span>,a,<span class="string">&quot;cm&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>写不下去了，python快把我折磨疯了，很多项目换了电脑一半的代码都要重写，能用的不多，我再琢磨琢磨，老代码换个新环境就不能运行了，python纯小公主语言。</p>
<p>再也不写python了，人生苦短，谁用python谁傻逼。</p>
<p>你怎么知道我马超有标了？</p>

    <figure class="figure-image">
      <img src="https://pic.imgdb.cn/item/64bea3331ddac507cc70efaa.jpg" alt="你怎么知道我马超有标了？" loading="lazy" />
      <figcaption>你怎么知道我马超有标了？</figcaption>
    </figure>
  ]]></content>
      <tags>
        <tag>朝花夕拾</tag>
      </tags>
  </entry>
  <entry>
    <title>新老婆</title>
    <url>/2023/08/07/%E6%96%B0%E8%80%81%E5%A9%86/</url>
    <content><![CDATA[
    <figure class="figure-image">
      <img src="http://rylgutqq8.sabkt.gdipper.com/fb57d71f1c9881e22ec645ec4a2fdaae.png" alt="卡哇伊内" loading="lazy" />
      <figcaption>卡哇伊内</figcaption>
    </figure>
  ]]></content>
  </entry>
  <entry>
    <title>昨天没写完的部分</title>
    <url>/2023/07/25/%E6%98%A8%E5%A4%A9%E6%B2%A1%E5%86%99%E5%AE%8C%E7%9A%84%E9%83%A8%E5%88%86/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='https://www.joy127.com/url/106289.mp3' data-name='Blueming' data-artist='IU' data-cover='https://pic.imgdb.cn/item/64bfcc681ddac507cc5b2f5b.webp' ></div>
<p>谁选的我不多说，懂的都懂。</p>
<p><em><strong>昨天因为我python的环境有些冲突，很多都没有跑起来，今天折腾半天，最后用conda建立虚拟环境，大部分都可以了，我把昨天应该写的补上，应该做完今天的就差不多没了。</strong></em></p>
<h2 id="颜值打分"><a href="#颜值打分" class="headerlink" title="颜值打分"></a>颜值打分</h2><p>这个做了挺久的，半抄半写，效果不算好，我认为应该是越白分数越高，我也不清楚opencv这个模型是拿什么练的，测了一下，彭于晏没pzm帅😋</p>

    <figure class="figure-image">
      <img src="https://pic.imgdb.cn/item/64bfcc4f1ddac507cc5b0856.png" alt="莱昂纳多那肯定得一伯分" loading="lazy" />
      <figcaption>莱昂纳多那肯定得一伯分</figcaption>
    </figure>
  
<p>代码实现，要有一个文件叫haarcascade_frontalface_default.xml，训练模型，这个应该是在opencv里有。<br>需要的库有：ybc_face,numpy,opencv,tkinter</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> ybc_face <span class="keyword">as</span> face</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line">face_cascade = cv2.CascadeClassifier(<span class="string">&quot;haarcascade_frontalface_default.xml&quot;</span>)</span><br><span class="line">img = cv2.imread(<span class="string">&#x27;img/jcw.jpg&#x27;</span>)</span><br><span class="line">gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line">faces = face_cascade.detectMultiScale(gray, <span class="number">1.3</span>, <span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(faces)</span><br><span class="line"><span class="keyword">for</span> (x,y,w,h) <span class="keyword">in</span> faces:</span><br><span class="line">    cv2.rectangle(img,(x,y),(x+w,y+h),(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">5</span>)</span><br><span class="line">cv2.imwrite(<span class="string">&#x27;result.png&#x27;</span>,img)</span><br><span class="line"></span><br><span class="line">res = face.info(<span class="string">&#x27;result.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">imageLabel_win = tk.Tk()</span><br><span class="line">photo = tk.PhotoImage(file=<span class="string">&#x27;result.png&#x27;</span>)</span><br><span class="line">imageLabel_win = tk.Label(imageLabel_win,image=photo)</span><br><span class="line">imageLabel_win.pack(side=tk.LEFT)</span><br><span class="line">imageLabel_win.mainloop()</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>

<h2 id="图片油画效果"><a href="#图片油画效果" class="headerlink" title="图片油画效果"></a>图片油画效果</h2><p>还是opencv，opencv真图像处理界の绝对王者</p>

    <figure class="figure-image">
      <img src="https://pic.imgdb.cn/item/64bfd8771ddac507cc702d55.jpg" alt="原图" loading="lazy" />
      <figcaption>原图</figcaption>
    </figure>
  

    <figure class="figure-image">
      <img src="https://pic.imgdb.cn/item/64c063a21ddac507cc292c4f.jpg" alt="处理之后" loading="lazy" />
      <figcaption>处理之后</figcaption>
    </figure>
  
<p>这个模糊程度得自行根据图片的清晰程度调整，直接照抄不好使。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;5.png&#x27;</span>)<span class="comment">#这里填你所选用的图片</span></span><br><span class="line">res = cv2.xphoto.oilPainting(img, <span class="number">4</span>, <span class="number">1</span>)  <span class="comment"># 4往上就是越来越模糊，往下就是越来越清晰.</span></span><br><span class="line"><span class="comment">#cv2.imshow(&#x27;result&#x27;, res)</span></span><br><span class="line">cv2.imwrite(<span class="string">&#x27;result1.jpg&#x27;</span>,res)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<h2 id="文字填充图片像素"><a href="#文字填充图片像素" class="headerlink" title="文字填充图片像素"></a>文字填充图片像素</h2><p>就是把图片里的像素用文字覆盖，改自b站一位up的项目，<a href="https://github.com/3150601355/PictureOfText">原项目地址</a>。<br>主要是把import那一块改了，我觉得没啥必要这样写，直接import更方便，当然那位up可能是为了方便纯路人。<br>文件切记不能太大，否则动辄几十上百兆。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CHILD_W = CHILD_H = <span class="number">16</span>                                      <span class="comment"># 子图的尺寸，宽和高都是16像素</span></span><br><span class="line">txt = <span class="string">&#x27;我惠美如画中仙&#x27;</span>                                      <span class="comment"># 输出内容</span></span><br><span class="line">font = ImageFont.truetype(<span class="string">&#x27;AliPuHui-Bold.ttf&#x27;</span>, CHILD_W)     <span class="comment"># 字体及大小,选用粗体字体效果更好</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 程序入口</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    imgSrc = Image.<span class="built_in">open</span>(sys.argv[<span class="number">1</span>])                       <span class="comment"># 打开源图像</span></span><br><span class="line">    w, h = imgSrc.size                                      <span class="comment"># 源图像宽和高</span></span><br><span class="line">    </span><br><span class="line">    imgChild = Image.new(<span class="string">&quot;RGB&quot;</span>, (CHILD_W, CHILD_H))         <span class="comment"># 新建子图</span></span><br><span class="line">    imgDst = Image.new(<span class="string">&quot;RGB&quot;</span>, (CHILD_W*w, CHILD_H*h) )      <span class="comment"># 创建目标图像的空图，待填充</span></span><br><span class="line"></span><br><span class="line">    textW, textH = font.getsize(<span class="string">&quot;迷&quot;</span>)                       <span class="comment"># 取得单个文字的宽、高信息</span></span><br><span class="line">    offsetX = (CHILD_W - textW) &gt;&gt; <span class="number">1</span>                        <span class="comment"># 文字水平居中绘制</span></span><br><span class="line">    offsetY = (CHILD_H - textH) &gt;&gt; <span class="number">1</span>                        <span class="comment"># 文字垂直居中绘制</span></span><br><span class="line"></span><br><span class="line">    charIndex = <span class="number">0</span>                                           <span class="comment"># 序号，代表当前绘制哪个汉字</span></span><br><span class="line">    draw = ImageDraw.Draw(imgChild)                         <span class="comment"># 取得小图的绘图对象，用于绘制文字</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始处理图片...&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(h):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(w):</span><br><span class="line">            draw.rectangle( (<span class="number">0</span>, <span class="number">0</span>, CHILD_W, CHILD_H), fill = <span class="string">&#x27;lightgray&#x27;</span> )  <span class="comment"># 灰色背景效果比外色略好</span></span><br><span class="line"></span><br><span class="line">            draw.text( (offsetX, offsetY), txt[charIndex], font = font, fill = imgSrc.getpixel((x, y)) )</span><br><span class="line">            </span><br><span class="line">            imgDst.paste(imgChild, (x*CHILD_W, y*CHILD_H))  <span class="comment"># 把绘制好的子图填到imgDst里</span></span><br><span class="line">            </span><br><span class="line">            charIndex += <span class="number">1</span>                                  <span class="comment"># 序号加1，从而依次绘制每个字</span></span><br><span class="line">            <span class="keyword">if</span> charIndex == <span class="built_in">len</span>(txt):                       <span class="comment"># 循环绘制</span></span><br><span class="line">                charIndex = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    imgDst.save(sys.argv[<span class="number">2</span>])                                <span class="comment"># 保存图片</span></span><br></pre></td></tr></table></figure>

    <figure class="figure-image">
      <img src="https://pic.imgdb.cn/item/64bfe2921ddac507cc8154a4.png" alt="文件实在是太大了，传不上去" loading="lazy" />
      <figcaption>文件实在是太大了，传不上去</figcaption>
    </figure>
  

    <figure class="figure-image">
      <img src="https://pic.imgdb.cn/item/64bfe2d71ddac507cc81d05c.png" alt="只能这么看看" loading="lazy" />
      <figcaption>只能这么看看</figcaption>
    </figure>
  

<h2 id="猜数游戏"><a href="#猜数游戏" class="headerlink" title="猜数游戏"></a>猜数游戏</h2><p>python写累了，写个rust。</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> std::io;</span><br><span class="line"><span class="keyword">use</span> rand::Rng;</span><br><span class="line"><span class="keyword">use</span> std::cmp::Ordering;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Guess a number!&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">secret_number</span> = rand::<span class="title function_ invoke__">thread_rng</span>().<span class="title function_ invoke__">gen_range</span>(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;The number is &#123;&#125;&quot;</span>,secret_number);</span><br><span class="line"><span class="keyword">loop</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">guess</span> = <span class="type">String</span>::<span class="title function_ invoke__">new</span>();</span><br><span class="line"></span><br><span class="line">    io::<span class="title function_ invoke__">stdin</span>().<span class="title function_ invoke__">read_line</span>(&amp;<span class="keyword">mut</span> guess).<span class="title function_ invoke__">expect</span>(<span class="string">&quot;Can&#x27;t read&quot;</span>);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;The number that you write is : &#123;&#125;&quot;</span>,guess);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">guess</span>:<span class="type">u32</span> = <span class="keyword">match</span> guess.<span class="title function_ invoke__">trim</span>().<span class="title function_ invoke__">parse</span>()&#123;</span><br><span class="line">            <span class="title function_ invoke__">Ok</span>(num) =&gt; num,</span><br><span class="line">            <span class="title function_ invoke__">Err</span>(_) =&gt; <span class="keyword">continue</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">:</span><br><span class="line">    matc Eguess.<span class="title function_ invoke__">cmp</span>(&amp;secret_number)&#123;</span><br><span class="line">        Ordering::Less =&gt; <span class="built_in">println!</span>(<span class="string">&quot;Too small!!&quot;</span>),</span><br><span class="line">        Ordering::Greater =&gt; <span class="built_in">println!</span>(<span class="string">&quot;Too big&quot;</span>),</span><br><span class="line">        Ordering::Equal =&gt; &#123;</span><br><span class="line">            <span class="built_in">println!</span>(<span class="string">&quot;You win!&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>随机给一个数（1~100），然后让你凭空猜，上的rust课里有讲这个，没什么好写了就放出来了。</p>
<h3 id="这算是写完了，换了电脑很多不太好的项目被当时的我狠狠地删除了，留下来了寥寥几个能写的，我当时是否真正的认真挑选了我没有确定的依据，就当是把过错都丢弃了，好像我寄希望于杀死明月的太阳，带来阳光的同时抹去了人们在恐惧中发明的火种，我忏悔当时的鲁莽。"><a href="#这算是写完了，换了电脑很多不太好的项目被当时的我狠狠地删除了，留下来了寥寥几个能写的，我当时是否真正的认真挑选了我没有确定的依据，就当是把过错都丢弃了，好像我寄希望于杀死明月的太阳，带来阳光的同时抹去了人们在恐惧中发明的火种，我忏悔当时的鲁莽。" class="headerlink" title="这算是写完了，换了电脑很多不太好的项目被当时的我狠狠地删除了，留下来了寥寥几个能写的，我当时是否真正的认真挑选了我没有确定的依据，就当是把过错都丢弃了，好像我寄希望于杀死明月的太阳，带来阳光的同时抹去了人们在恐惧中发明的火种，我忏悔当时的鲁莽。"></a>这算是写完了，换了电脑很多不太好的项目被当时的我狠狠地删除了，留下来了寥寥几个能写的，我当时是否真正的认真挑选了我没有确定的依据，就当是把过错都丢弃了，好像我寄希望于杀死明月的太阳，带来阳光的同时抹去了人们在恐惧中发明的火种，我忏悔当时的鲁莽。</h3>]]></content>
      <categories>
        <category>Doc</category>
      </categories>
      <tags>
        <tag>朝花夕拾</tag>
      </tags>
  </entry>
  <entry>
    <title>最燃的一集</title>
    <url>/2023/08/07/%E6%9C%80%E7%87%83%E7%9A%84%E4%B8%80%E9%9B%86/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/obj_wo3DlMOGwrbDjj7DisKw_14081614489_7c71_d58e_2bc9_ffe5efa9689f831c4c8c9d61415587dd.mp3' data-name='風' data-artist='山猿' data-cover='http://rylgutqq8.sabkt.gdipper.com/2886218025454316.jpg' data-lrc='http://rylgutqq8.sabkt.gdipper.com/%E9%A2%A8%20-%20%E5%B1%B1%E7%8C%BF.lrc' data-lrcType='3' ></div>]]></content>
      <tags>
        <tag>歌曲推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>玩霓虹不勇敢建议别玩</title>
    <url>/2023/08/10/%E7%8E%A9%E9%9C%93%E8%99%B9%E4%B8%8D%E5%8B%87%E6%95%A2%E5%BB%BA%E8%AE%AE%E5%88%AB%E7%8E%A9/</url>
    <content><![CDATA[<div class="dplayer-box" data-url='http://ryldbqco1.hn-bkt.clouddn.com/%E4%B8%8D%E5%8B%87%E6%95%A2%E5%BB%BA%E8%AE%AE%E4%B8%8D%E7%8E%A9%E9%9C%93%E8%99%B9.mp4' ></div>
]]></content>
      <tags>
        <tag>剪点东西</tag>
      </tags>
  </entry>
  <entry>
    <title>看看混剪</title>
    <url>/2023/07/30/%E7%9C%8B%E7%9C%8B%E6%B7%B7%E5%89%AA/</url>
    <content><![CDATA[<div class="dplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/%E7%AC%AC%E4%B8%89%E7%89%88.mp4' ></div>
]]></content>
      <tags>
        <tag>剪点东西</tag>
      </tags>
  </entry>
  <entry>
    <title>真的爱你</title>
    <url>/2023/08/09/%E7%9C%9F%E7%9A%84%E7%88%B1%E4%BD%A0/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/%E7%9C%9F%E7%9A%84%E7%88%B1%E4%BD%A0-Beyond.128.mp3' data-name='真的爱你' data-artist='Beyond' data-cover='http://rylgutqq8.sabkt.gdipper.com/3ca020e07e8e8329819fc1ced032d2ecfa68af1f.jpg%401000w_1000h_1c.webp' data-lrc='http://rylgutqq8.sabkt.gdipper.com/%E7%9C%9F%E7%9A%84%E7%88%B1%E4%BD%A0%20-%20Beyond.lrc' data-lrcType='3' ></div>]]></content>
      <tags>
        <tag>歌曲推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>能不能给我一首歌的时间</title>
    <url>/2023/07/23/%E8%83%BD%E4%B8%8D%E8%83%BD%E7%BB%99%E6%88%91%E4%B8%80%E9%A6%96%E6%AD%8C%E7%9A%84%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='https://www.joy127.com/url/106234.mp3' data-name='单车' data-artist='陈奕迅' data-cover='https://pic.imgdb.cn/item/64bd20b91ddac507ccb40821.webp' ></div>
<h1 id="一些稍微有用的项目"><a href="#一些稍微有用的项目" class="headerlink" title="一些稍微有用的项目"></a>一些稍微有用的项目</h1><h3 id="全自动二次函数解析-图像生成"><a href="#全自动二次函数解析-图像生成" class="headerlink" title="全自动二次函数解析&amp;图像生成"></a>全自动二次函数解析&amp;图像生成</h3><p>顾名思义，就是一个能够根据你输入的一次项，二次项系数和常数项生成相对应的解析（delta，与x轴的交点），并生成图像。<br>其实就是把abc三个值换成了变量，没多大难度</p>

    <figure class="figure-image">
      <img src="https://pic.imgdb.cn/item/64bd2de41ddac507cce0d03b.png" alt="大致的效果" loading="lazy" />
      <figcaption>大致的效果</figcaption>
    </figure>
  
<p>具体的代码实现（少数的我写了注释的代码），需要matplotlib，numpy这两个库，22年写的应该是。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>]  <span class="comment"># 用来正常显示中文标签</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span>  <span class="comment"># 用来正常显示负号</span></span><br><span class="line">x = np.arange(-<span class="number">10</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">A = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;二次项系数&#x27;</span>))</span><br><span class="line">B = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;一次项系数&#x27;</span>))</span><br><span class="line">C = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;常数项&#x27;</span>))</span><br><span class="line"><span class="comment"># 查成分</span></span><br><span class="line"><span class="keyword">if</span> A &lt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开口向下&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开口向上&quot;</span>)</span><br><span class="line">DingX = B/-<span class="number">2</span>*A</span><br><span class="line">DingY = <span class="number">4</span>*A*C - B * B / <span class="number">4</span> * A</span><br><span class="line"><span class="comment"># 画出成分</span></span><br><span class="line"><span class="built_in">print</span>(DingX, DingY)</span><br><span class="line">y = A * x * x + B * x + C</span><br><span class="line">plt.xlabel(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&quot;一元二次函数&quot;</span>)</span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<h3 id="图片转彩色字符画"><a href="#图片转彩色字符画" class="headerlink" title="图片转彩色字符画"></a>图片转彩色字符画</h3><p>说实话我自己也没绷住，这个属于是最没用的<br>灰白的尚且有些意义，加了彩色是脱裤子放屁。</p>

    <figure class="figure-image">
      <img src="https://pic.imgdb.cn/item/64bd30a01ddac507cce8a6cc.png" alt="原图我觉得不用放了，一眼仙贝" loading="lazy" />
      <figcaption>原图我觉得不用放了，一眼仙贝</figcaption>
    </figure>
  
<p>代码实现，需要opencv这个库</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">charSize = <span class="number">2</span>  <span class="comment"># 字符尺寸</span></span><br><span class="line"></span><br><span class="line">string = <span class="string">&quot;随便&#x27;&quot;</span></span><br><span class="line">count = <span class="built_in">len</span>(string)</span><br><span class="line">img = cv2.imread(<span class="string">&#x27;3.jpg&#x27;</span>)</span><br><span class="line">u, v, _ = img.shape</span><br><span class="line">c = img*<span class="number">0</span> + <span class="number">255</span></span><br><span class="line">gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, u, <span class="number">6</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, v, <span class="number">6</span>):</span><br><span class="line">        pix = gray[i, j]</span><br><span class="line">        b, g, r = img[i, j]</span><br><span class="line">        zifu = string[<span class="built_in">int</span>(((count - <span class="number">1</span>) * pix) / <span class="number">256</span>)]</span><br><span class="line">        cv2.putText(c, zifu, (j, i), cv2.FONT_HERSHEY_COMPLEX,</span><br><span class="line">                    charSize, (<span class="built_in">int</span>(b), <span class="built_in">int</span>(g), <span class="built_in">int</span>(r)), <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">cv2.imwrite(<span class="string">&#x27;output.png&#x27;</span>, c)</span><br></pre></td></tr></table></figure>
<h3 id="素描化图片"><a href="#素描化图片" class="headerlink" title="素描化图片"></a>素描化图片</h3><p>这个效果好，做遗照相当合适（</p>

    <figure class="figure-image">
      <img src="https://pic.imgdb.cn/item/64bd45b61ddac507cc2dd0d4.jpg" alt="渲染花了0.114514s" loading="lazy" />
      <figcaption>渲染花了0.114514s</figcaption>
    </figure>
  
<p>代码实现<br>需要pillow，numpy两个库</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a=np.asarray(Image.<span class="built_in">open</span>(<span class="string">&quot;3.jpg&quot;</span>).convert(<span class="string">&quot;L&quot;</span>)).astype(<span class="string">&quot;float&quot;</span>)</span><br><span class="line">depth=<span class="number">10</span><span class="comment">#深度的范围为0~100，我们先取10这个数</span></span><br><span class="line">grad = np.gradient(a) <span class="comment">#取图像灰度的梯度值，有两个</span></span><br><span class="line">grad_x, grad_y = grad <span class="comment">#分别取横纵图像梯度值</span></span><br><span class="line"><span class="comment">#将高度融入纵横梯度当中，也可以理解让梯度变化不那么明显</span></span><br><span class="line">grad_x = grad_x*depth/<span class="number">100.</span></span><br><span class="line">grad_y = grad_y*depth/<span class="number">100.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">A = np.sqrt(grad_x**<span class="number">2</span> + grad_y**<span class="number">2</span> + <span class="number">1.</span>)</span><br><span class="line">uni_x = grad_x/A</span><br><span class="line">uni_y = grad_y/A</span><br><span class="line">uni_z = <span class="number">1.</span>/A</span><br><span class="line"><span class="comment">#设定了一个光源点，知道角度，来算出单位的x,y,z的长度</span></span><br><span class="line">vec_el = np.pi/<span class="number">2.2</span>                   <span class="comment"># 光源的俯视角度，弧度值</span></span><br><span class="line">vec_az = np.pi/<span class="number">4.</span>                    <span class="comment"># 光源的方位角度，弧度值</span></span><br><span class="line">dx = np.cos(vec_el)*np.cos(vec_az)   <span class="comment">#光源对x 轴的影响</span></span><br><span class="line">dy = np.cos(vec_el)*np.sin(vec_az)   <span class="comment">#光源对y 轴的影响</span></span><br><span class="line">dz = np.sin(vec_el)              <span class="comment">#光源对z 轴的影响</span></span><br><span class="line"><span class="comment">#光源归一化</span></span><br><span class="line">b = <span class="number">255</span>*(dx*uni_x + dy*uni_y + dz*uni_z)   </span><br><span class="line">b = b.clip(<span class="number">0</span>,<span class="number">255</span>)</span><br><span class="line"> </span><br><span class="line">im = Image.fromarray(b.astype(<span class="string">&#x27;uint8&#x27;</span>))  <span class="comment">#重构图像</span></span><br><span class="line">im.save(<span class="string">&#x27;6sav.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="QQ信息轰炸"><a href="#QQ信息轰炸" class="headerlink" title="QQ信息轰炸"></a>QQ信息轰炸</h3><p>看名字就知道了，需要pynput这个库</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pynput.mouse <span class="keyword">import</span> Button, Controller <span class="keyword">as</span> mouse_Controller</span><br><span class="line"><span class="keyword">from</span> pynput.keyboard <span class="keyword">import</span> Key, Controller <span class="keyword">as</span> key_Controller</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">mouse = mouse_Controller()  <span class="comment"># 控制鼠标</span></span><br><span class="line">keyboard = key_Controller()</span><br><span class="line">mouse.press(Button.left)  <span class="comment"># 按住鼠标左键</span></span><br><span class="line">mouse.release(Button.left)  <span class="comment"># 松开鼠标左键</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">99</span>):  <span class="comment">#总共发多少次</span></span><br><span class="line">    time.sleep(<span class="number">0.1</span>) <span class="comment">#消息发送间隔时间</span></span><br><span class="line">    keyboard.<span class="built_in">type</span>(<span class="string">&#x27;cnm&#x27;</span>)  <span class="comment">#发送的消息内容,不一定要c他m</span></span><br><span class="line">    keyboard.press(Key.enter)</span><br><span class="line">    keyboard.release(Key.enter)</span><br></pre></td></tr></table></figure>
<div class="dplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/unknown_2023.08.01-10.27.mp4' ></div>

<p>这个不大好演示，我还没有找到一个很好的视频托管平台，等我找到了会把演示视频补上。</p>
<p>三年属实太长了，东西做了很多只是少数发到了朋友圈和动态，很多东西我都没有演示，这两三天内我差中选优，多做几期，纪念，歌颂我平凡的爱好。</p>
]]></content>
      <categories>
        <category>Doc</category>
      </categories>
      <tags>
        <tag>朝花夕拾</tag>
      </tags>
  </entry>
  <entry>
    <title>论gitee和shit的区别</title>
    <url>/2023/07/27/%E8%AE%BAgitee%E5%92%8Cshit%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<h1 id="Gitee和屎有什么区别？"><a href="#Gitee和屎有什么区别？" class="headerlink" title="Gitee和屎有什么区别？"></a>Gitee和屎有什么区别？</h1><p>众所周知，gitee是全宇宙最棒的开源网站，其优点包括但不限于：不实名不开源，实名过审比挖审核的祖坟还难，以及典中典之：灵活开源，动态开源，非必要不开源，谨防恶意开源。确实是很有清朝末期的繁荣与开放，又带有明朝的高度言论自由，是有着浓厚的古风古韵的。</p>
<p>礼完了，这几句好看的话憋了半小时，兵。<br>首先是gitee的实名审核制度，这个实名审核制度先不扯其过审速度，我可以暂且理解为员工忙，人手不够。<br>就单从这个审核标准说起，一张身份证正面，一张反面，手持身份证，一张正面一张反面，四张照片，你就在页面里挂一句这个，然后要求是什么都没有，用户怎么知道？从你们宕机了的脑子里读取吗，还是我要自己写readme给自己看？拍完了告诉我身份证保护套是要摘的，此时已经距离我上传照片4天了，谁的时间都是金钱，你轻描淡写一句话又重拍，又审核四天，又不行，这次是因为图片不清晰，你gitee存这个是要拿来当壁纸还是要拿来挂公司楼梯里当墙纸啊？每个员工拿一张用户实名认证的照片放电脑上时刻警醒自己还要工作吗？<br>其次是gitee处理issue的态度，你们是不是不把这个当回事？issue里有多少人反馈实名的问题？这是一天两天了吗，我操你妈一看见就删，不然就拒绝，回一句重复这个没有意义，你要多有意义？你们解决不了的就没有意义？为什么没人去你那上班你还不明白吗。<br>再然后是最逆天的开源，非必要不开源，这句话就好像再说非必要不人民民主专政，我开不开源是我的事，你替我做决定那还是你来替我写项目？开源我自己的东西我还要给你交身份证明，发你gitee上算给你脸了，得寸进尺的吃相相当难看。<br>家家有本难念的经，gitee是把好念的经全写上难念，然后以国家的名义来遮蔽自己傲慢的事实，开局就高人一等，你的底气是你母亲的数量吗。<br>讲回到标题，屎尚且能涵养土地为人民服务。傻逼Gitee除了拿钱浪费时间什么都办不到，这叫阻挠社会发展的害虫。</p>
]]></content>
      <categories>
        <category>Doc</category>
      </categories>
      <tags>
        <tag>讲点藏话</tag>
      </tags>
  </entry>
  <entry>
    <title>在hexo中如何正确添加giscus评论</title>
    <url>/2023/08/15/%E5%9C%A8hexo%E4%B8%AD%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E6%B7%BB%E5%8A%A0giscus%E8%AF%84%E8%AE%BA/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://rylgutqq8.sabkt.gdipper.com/%E7%A7%A6%E5%B2%9A%20-%20%E9%BB%84%E6%98%8F%E4%B9%8B%E6%97%B6%EF%BC%88%E9%92%A2%E7%90%B4%E7%89%88%EF%BC%89.mp3' data-name='黄昏之时（钢琴版）' data-artist='秦岚' data-cover='http://rylgutqq8.sabkt.gdipper.com/b8014a90f603738d6b3e0520bb1bb051f819ecb8.webp' ></div>
<p>我因为懒一开始就不想自己写，后来发现费的时间更多，基本上把该踩的坑全踩了一遍，我也不多废话我自己的悲惨经历了，我讲讲如何正确的配置giscus评论。</p>
<p>申请的部分按照csdn和知乎上的几篇教程来是可以的，但是到了本地配置的时候千万不能直接照抄，首先你要在你主题下的config文件里添加这样一些内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">giscus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">repo:</span>  <span class="comment"># Github repository name</span></span><br><span class="line">  <span class="attr">repo-id:</span>  <span class="comment"># Github repository id</span></span><br><span class="line">  <span class="attr">category:</span>  <span class="comment"># Github discussion category</span></span><br><span class="line">  <span class="attr">category_id:</span>  <span class="comment"># Github discussion category id</span></span><br><span class="line">  <span class="comment"># Available values: light | dark | dark_high_contrast | transparent_dark | preferred-color-scheme</span></span><br><span class="line">    <span class="comment"># Available values: pathname | url | title | og:title</span></span><br><span class="line">  <span class="attr">mapping:</span> </span><br><span class="line">  <span class="comment"># Available values: 0 | 1</span></span><br><span class="line">  <span class="attr">reactions-enabled:</span> <span class="number">1</span></span><br><span class="line">   <span class="comment"># Available values: 0 | 1</span></span><br><span class="line">  <span class="attr">emit-metadata:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># Available values: light | dark | dark_high_contrast | transparent_dark | preferred-color-scheme</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">preferred_color_scheme</span></span><br><span class="line">  <span class="comment"># Available values: en | zh-CN</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span></span><br><span class="line">  <span class="comment"># Place the comment box above the comments</span></span><br><span class="line">  <span class="attr">input-position:</span> <span class="string">top</span></span><br></pre></td></tr></table></figure>
<p>之后你要在主题下的layout文件里找到跟评论有关的，一般都是有comments字样的，可能是文件夹也可能是ejs或者其他的文件，按主题来定，找到之后在这添加以下的代码，这个可以在giscus那里找到，每个人的都不一样你复制你自己的。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.<span class="property">giscus</span> &amp;&amp; theme.<span class="property">giscus</span>[<span class="string">&#x27;repo&#x27;</span>] &amp;&amp; theme.<span class="property">giscus</span>[<span class="string">&#x27;repo-id&#x27;</span>]) &#123; %&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;giscus&quot;</span> <span class="attr">class</span>=<span class="string">&quot;giscus&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">data-repo</span>=<span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">data-repo-id</span>=<span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">data-category</span>=<span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">data-category-id</span>=<span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">data-mapping</span>=<span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">data-strict</span>=<span class="string">&quot;0&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">data-reactions-enabled</span>=<span class="string">&quot;1&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">data-emit-metadata</span>=<span class="string">&quot;0&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">data-input-position</span>=<span class="string">&quot;bottom&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">data-theme</span>=<span class="string">&quot;preferred_color_scheme&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">data-lang</span>=<span class="string">&quot;zh-CN&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">async</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>
<p>完成之后直接保存生成大概就没什么问题了，这里ejs内的文件内容，逻辑可能会有不一样，有的有判断语句自行选择是加上去还是直接把原配置全部删掉，我是把主体内其他的评论系统全部删掉了直接粘贴这一段代码的，目前没有问题，最后要在主题的config文件里把评论打开就好了。</p>
]]></content>
      <categories>
        <category>Doc</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>动态壁纸推荐（2）</title>
    <url>/2023/08/16/%E5%8A%A8%E6%80%81%E5%A3%81%E7%BA%B8%E6%8E%A8%E8%8D%90%EF%BC%882%EF%BC%89/</url>
    <content><![CDATA[<div class="aplayer-box" data-url='http://ryldbqco1.hn-bkt.clouddn.com/M%E5%85%AB%E4%B8%83-%E7%B1%B3%E6%B4%A5..._lan.mp3' data-name='M八七' data-artist='米津玄师' data-cover='http://ryldbqco1.hn-bkt.clouddn.com/d76adcbdf1b7c0760d636b440b00c11307a2ee41.jpg%401000w_1000h_1c%20%281%29.webp' data-lrc='http://ryldbqco1.hn-bkt.clouddn.com/M%E5%85%AB%E4%B8%83%20-%20%E7%B1%B3%E6%B4%A5%E7%8E%84%E5%B8%88.lrc' data-lrcType='3' ></div>

<div class="dplayer-box" data-url='http://ryldbqco1.hn-bkt.clouddn.com/Its%20Gonna%20Rain%20Soon.mp4' ></div>
<p>文件地址：<a href="http://ryldbqco1.hn-bkt.clouddn.com/Its%20Gonna%20Rain%20Soon.mp4">http://ryldbqco1.hn-bkt.clouddn.com/Its%20Gonna%20Rain%20Soon.mp4</a></p>
<h3 id="点进去后右键下载，下同"><a href="#点进去后右键下载，下同" class="headerlink" title="点进去后右键下载，下同"></a>点进去后右键下载，下同</h3><div class="dplayer-box" data-url='http://ryldbqco1.hn-bkt.clouddn.com/%E5%A3%81%E7%BA%B8%E5%88%86%E4%BA%AB%20%288%29.mp4' ></div>
<p>文件地址：<a href="http://ryldbqco1.hn-bkt.clouddn.com/%E5%A3%81%E7%BA%B8%E5%88%86%E4%BA%AB%20%288%29.mp4">http://ryldbqco1.hn-bkt.clouddn.com/%E5%A3%81%E7%BA%B8%E5%88%86%E4%BA%AB%20%288%29.mp4</a></p>
<div class="dplayer-box" data-url='http://ryldbqco1.hn-bkt.clouddn.com/22%E3%80%81eva.mp4' ></div>
<p>文件地址：<a href="http://ryldbqco1.hn-bkt.clouddn.com/22%E3%80%81eva.mp4">http://ryldbqco1.hn-bkt.clouddn.com/22%E3%80%81eva.mp4</a></p>
<div class="dplayer-box" data-url='http://ryldbqco1.hn-bkt.clouddn.com/Flute-Girl.mp4' ></div>
<p>文件地址：<a href="http://ryldbqco1.hn-bkt.clouddn.com/Flute-Girl.mp4">http://ryldbqco1.hn-bkt.clouddn.com/Flute-Girl.mp4</a></p>
<h2 id="链接失效，致电17827877587或qq：305224868"><a href="#链接失效，致电17827877587或qq：305224868" class="headerlink" title="链接失效，致电17827877587或qq：305224868"></a>链接失效，致电17827877587或qq：305224868</h2>]]></content>
      <categories>
        <category>Wallpaper</category>
      </categories>
      <tags>
        <tag>动态壁纸</tag>
      </tags>
  </entry>
</search>
